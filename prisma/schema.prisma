// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int       @id @default(autoincrement())
  name          String
  lastName      String?   // Apellidos del cliente
  email         String    @unique
  password      String
  phoneNumber   String?   // Número telefónico del Cliente
  openpayId     String?   // ID de cliente en OpenPay
  street        String?   // Calle
  exteriorNumber String?  // Número exterior
  interiorNumber String?  // Número interior (opcional)
  neighborhood  String?   // Colonia
  city          String?   // Ciudad
  state         String?   // Estado
  postalCode    String?   // Código postal
  country       String?   // País
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Form {
  id       Int @id @default(autoincrement())
  name String
  email String
  message String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Products {
  id              Int     @id @default(autoincrement())
  name            String
  price           Float
  quantity        String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Plans{
  id Int @id @default(autoincrement())
  name String
  amount Float //monto que se cobrará cada vez
  currency String //moneda
  repeat_every Int //numero de veces (2 indica dos {repeat_unit})
  repeat_unit String //week, month, year
  retry_times Int //numero de intentos de cobro de la suscripción
  status String //active o deleted
  status_after_retry String //unpaid o cancelled (status una vez se agoten intentos de retry)
  trial_days Int
  openpayId          String?  @unique // id del plan en openpay
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
